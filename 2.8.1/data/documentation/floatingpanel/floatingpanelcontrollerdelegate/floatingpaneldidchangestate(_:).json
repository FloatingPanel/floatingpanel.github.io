{"hierarchy":{"paths":[["doc:\/\/com.scenee.FloatingPanel\/documentation\/FloatingPanel","doc:\/\/com.scenee.FloatingPanel\/documentation\/FloatingPanel\/FloatingPanelControllerDelegate"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Instance Method","title":"floatingPanelDidChangeState(_:)","externalID":"c:@M@FloatingPanel@objc(pl)FloatingPanelControllerDelegate(im)floatingPanelDidChangeState:","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"floatingPanelDidChangeState:"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"floatingPanelDidChangeState","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@FloatingPanel@objc(cs)FloatingPanelController","text":"FloatingPanelController"},{"kind":"text","text":")"}],"modules":[{"name":"FloatingPanel"}],"symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"@objc","kind":"attribute"},{"text":" ","kind":"text"},{"text":"optional","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"floatingPanelDidChangeState","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"fpc","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@FloatingPanel@objc(cs)FloatingPanelController","text":"FloatingPanelController","identifier":"doc:\/\/com.scenee.FloatingPanel\/documentation\/FloatingPanel\/FloatingPanelController","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This can be called inside an animation block for presenting, dismissing a panel or moving a panel with your"},{"text":" ","type":"text"},{"text":"animation. So any view properties set inside this function will be automatically animated alongside a panel.","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/floatingpanel\/floatingpanelcontrollerdelegate\/floatingpaneldidchangestate(_:)"]},{"paths":["\/documentation\/floatingpanel\/floatingpanelcontrollerdelegate\/floatingpaneldidchangestate(_:)"],"traits":[{"interfaceLanguage":"occ"}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.scenee.FloatingPanel\/documentation\/FloatingPanel\/FloatingPanelControllerDelegate\/floatingPanelDidChangeState(_:)"},"sections":[],"abstract":[{"type":"text","text":"Called when a panel has changed to a new state."}],"references":{"doc://com.scenee.FloatingPanel/documentation/FloatingPanel/FloatingPanelControllerDelegate":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.scenee.FloatingPanel\/documentation\/FloatingPanel\/FloatingPanelControllerDelegate","navigatorTitle":[{"kind":"identifier","text":"FloatingPanelControllerDelegate"}],"abstract":[{"text":"A set of methods implemented by the delegate of a panel controller allows the adopting delegate to respond to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"messages from the FloatingPanelController class and thus respond to, and in some affect, operations such as"},{"type":"text","text":" "},{"type":"text","text":"dragging, attracting a panel, layout of a panel and the content, and transition animations."}],"title":"FloatingPanelControllerDelegate","role":"symbol","url":"\/documentation\/floatingpanel\/floatingpanelcontrollerdelegate","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"FloatingPanelControllerDelegate","kind":"identifier"}]},"doc://com.scenee.FloatingPanel/documentation/FloatingPanel/FloatingPanelController":{"identifier":"doc:\/\/com.scenee.FloatingPanel\/documentation\/FloatingPanel\/FloatingPanelController","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FloatingPanelController"}],"title":"FloatingPanelController","abstract":[{"text":"A container view controller to display a panel to present contents in parallel as a user wants.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FloatingPanelController"}],"type":"topic","url":"\/documentation\/floatingpanel\/floatingpanelcontroller","role":"symbol"},"doc://com.scenee.FloatingPanel/documentation/FloatingPanel":{"title":"FloatingPanel","type":"topic","role":"collection","abstract":[{"type":"text","text":"Create a user interface to display the related content and utilities alongside the main content."}],"identifier":"doc:\/\/com.scenee.FloatingPanel\/documentation\/FloatingPanel","url":"\/documentation\/floatingpanel","kind":"symbol"},"doc://com.scenee.FloatingPanel/documentation/FloatingPanel/FloatingPanelControllerDelegate/floatingPanelDidChangeState(_:)":{"title":"floatingPanelDidChangeState(_:)","role":"symbol","url":"\/documentation\/floatingpanel\/floatingpanelcontrollerdelegate\/floatingpaneldidchangestate(_:)","navigatorTitle":[{"text":"floatingPanelDidChangeState:","kind":"identifier"}],"identifier":"doc:\/\/com.scenee.FloatingPanel\/documentation\/FloatingPanel\/FloatingPanelControllerDelegate\/floatingPanelDidChangeState(_:)","abstract":[{"type":"text","text":"Called when a panel has changed to a new state."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"floatingPanelDidChangeState","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"FloatingPanelController","preciseIdentifier":"c:@M@FloatingPanel@objc(cs)FloatingPanelController"},{"kind":"text","text":")"}],"type":"topic"}},"variantOverrides":[{"patch":[{"value":"occ","path":"\/identifier\/interfaceLanguage","op":"replace"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Instance Method"},{"value":"floatingPanelDidChangeState:","op":"replace","path":"\/metadata\/title"},{"value":"method","path":"\/metadata\/symbolKind","op":"replace"},{"op":"replace","value":[{"kind":"text","text":"- "},{"text":"floatingPanelDidChangeState:","kind":"identifier"}],"path":"\/metadata\/fragments"},{"path":"\/topicSections","op":"add","value":null},{"path":"\/relationshipsSections","value":null,"op":"add"},{"value":null,"path":"\/seeAlsoSections","op":"add"},{"value":{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"text":") ","kind":"text"},{"text":"floatingPanelDidChangeState:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@M@FloatingPanel@objc(cs)FloatingPanelController","identifier":"doc:\/\/com.scenee.FloatingPanel\/documentation\/FloatingPanel\/FloatingPanelController","kind":"typeIdentifier","text":"FloatingPanelController"},{"kind":"text","text":" *) "},{"text":"fpc","kind":"internalParam"},{"kind":"text","text":";"}]}]},"op":"replace","path":"\/primaryContentSections\/0"},{"op":"replace","path":"\/references\/doc:~1~1com.scenee.FloatingPanel~1documentation~1FloatingPanel~1FloatingPanelControllerDelegate\/title","value":"FloatingPanelControllerDelegate"},{"op":"replace","path":"\/references\/doc:~1~1com.scenee.FloatingPanel~1documentation~1FloatingPanel~1FloatingPanelControllerDelegate\/fragments","value":[{"text":"FloatingPanelControllerDelegate","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.scenee.FloatingPanel~1documentation~1FloatingPanel~1FloatingPanelController\/title","value":"FloatingPanelController"},{"op":"replace","path":"\/references\/doc:~1~1com.scenee.FloatingPanel~1documentation~1FloatingPanel~1FloatingPanelController\/fragments","value":[{"kind":"identifier","text":"FloatingPanelController"}]},{"op":"replace","path":"\/references\/doc:~1~1com.scenee.FloatingPanel~1documentation~1FloatingPanel~1FloatingPanelControllerDelegate~1floatingPanelDidChangeState(_:)\/title","value":"floatingPanelDidChangeState:"},{"path":"\/references\/doc:~1~1com.scenee.FloatingPanel~1documentation~1FloatingPanel~1FloatingPanelControllerDelegate~1floatingPanelDidChangeState(_:)\/fragments","op":"replace","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"floatingPanelDidChangeState:"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}